{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","index.js"],"names":["InputTodo","props","className","placeholder","value","todoText","onChange","onClick","IncompleteTodos","incompleteTodos","map","todo","index","onClickComplete","onClickDelete","CompleteTodos","completeTodos","onClickBack","App","useState","setIncompleteTodos","setCompleteTodos","setToodoText","e","target","newTodos","newInCompleteTodos","splice","newCompleteTodos","newComp","newIncomp","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mLAEaA,EAAY,SAACC,GAExB,OACE,mCACE,sBAAKC,UAAU,aAAf,UACE,uBACEC,YAAY,qCACZC,MAAOH,EAAMI,SACbC,SAAUL,EAAMK,WAElB,wBAAQC,QAASN,EAAMM,QAAvB,gCCZKC,EAAkB,SAACP,GAC9B,OACE,mCACE,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,0CACA,6BACGD,EAAMQ,gBAAgBC,KAAI,SAACC,EAAMC,GAChC,OACE,sBAAgBV,UAAU,WAA1B,UACE,6BAAKS,IACL,wBAAQJ,QAAS,kBAAMN,EAAMY,gBAAgBD,IAA7C,0BAGA,wBAAQL,QAAS,kBAAMN,EAAMa,cAAcF,IAA3C,4BALQD,cCRXI,EAAgB,SAACd,GAC5B,OACE,mCACE,sBAAKC,UAAU,gBAAf,UACE,uDACCD,EAAMe,cAAcN,KAAI,SAACC,EAAMC,GAC9B,OACE,qBAAgBV,UAAU,WAA1B,SACE,+BACE,mCACA,wBAAQK,QAAS,kBAAMN,EAAMgB,YAAYL,IAAzC,8BAHMD,YCATO,EAAM,WACjB,MAA8CC,mBAAS,IAAvD,mBAAOV,EAAP,KAAwBW,EAAxB,KACA,EAA0CD,mBAAS,CAAC,MAApD,mBAAOH,EAAP,KAAsBK,EAAtB,KACA,EAAiCF,mBAAS,IAA1C,mBAAOd,EAAP,KAAiBiB,EAAjB,KA+BA,OACE,qCACE,cAAC,EAAD,CACEjB,SAAUA,EACVC,SAlCmB,SAACiB,GACxBD,EAAaC,EAAEC,OAAOpB,QAkClBG,QAhCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMoB,EAAQ,sBAAOhB,GAAP,CAAwBJ,IACtCe,EAAmBK,GACnBH,EAAa,QA8BX,cAAC,EAAD,CACEb,gBAAiBA,EACjBI,gBAzBkB,SAACD,GACvB,IAAMc,EAAkB,YAAOjB,GAC/BiB,EAAmBC,OAAOf,EAAO,GACjC,IAAMgB,EAAgB,sBAAOZ,GAAP,CAAsBP,EAAgBG,KAC5DS,EAAiBO,GACjBR,EAAmBM,IAqBfZ,cA/BgB,SAACF,GACrB,IAAMa,EAAQ,YAAOhB,GACrBgB,EAASE,OAAOf,EAAO,GACvBQ,EAAmBK,MA8BjB,cAAC,EAAD,CAAeT,cAAeA,EAAeC,YApB7B,SAACL,GACnB,IAAMiB,EAAO,YAAOb,GACpBa,EAAQF,OAAOf,EAAO,GACtB,IAAMkB,EAAS,sBAAOrB,GAAP,CAAwBO,EAAcJ,KACrDS,EAAiBQ,GACjBT,EAAmBU,UCjCjBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.38dc4fe9.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const InputTodo = (props) => {\n  //const [todoText, onChange, onClick] = props;\n  return (\n    <>\n      <div className=\"input-area\">\n        <input\n          placeholder=\"TODOを入力する\"\n          value={props.todoText}\n          onChange={props.onChange}\n        />\n        <button onClick={props.onClick}>追加</button>\n      </div>\n    </>\n  );\n};\n","export const IncompleteTodos = (props) => {\n  return (\n    <>\n      <div className=\"incomplete-area\">\n        <p className=\"title\">未完了のTODO</p>\n        <ul>\n          {props.incompleteTodos.map((todo, index) => {\n            return (\n              <div key={todo} className=\"list-row\">\n                <li>{todo}</li>\n                <button onClick={() => props.onClickComplete(index)}>\n                  完了\n                </button>\n                <button onClick={() => props.onClickDelete(index)}>削除</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n","export const CompleteTodos = (props) => {\n  return (\n    <>\n      <div className=\"complete-area\">\n        <p>完了のTODO</p>\n        {props.completeTodos.map((todo, index) => {\n          return (\n            <div key={todo} className=\"list-row\">\n              <ul>\n                <li>1</li>\n                <button onClick={() => props.onClickBack(index)}>戻す</button>\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTodos } from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([\"1\"]);\n  const [todoText, setToodoText] = useState(\"\");\n  const onChangeTodoText = (e) => {\n    setToodoText(e.target.value);\n  };\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setToodoText(\"\");\n  };\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n  const onClickComplete = (index) => {\n    const newInCompleteTodos = [...incompleteTodos];\n    newInCompleteTodos.splice(index, 1);\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newInCompleteTodos);\n  };\n\n  const onClickBack = (index) => {\n    const newComp = [...completeTodos];\n    newComp.splice(index, 1);\n    const newIncomp = [...incompleteTodos, completeTodos[index]];\n    setCompleteTodos(newComp);\n    setIncompleteTodos(newIncomp);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n      />\n      <IncompleteTodos\n        incompleteTodos={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos completeTodos={completeTodos} onClickBack={onClickBack} />\n    </>\n  );\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}